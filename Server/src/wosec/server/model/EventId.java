package wosec.server.model;

// Generated 18.08.2011 00:57:42 by Hibernate Tools 3.4.0.CR1
import java.util.UUID;
import org.hibernate.HibernateUtil;
import org.hibernate.Session;

/**
 * EventId generated by hbm2java
 */
public class EventId implements java.io.Serializable {

    private String eventId;
    private String instanceId;
    //private static int lastId = 0;

    public static EventId generateKey(String instanceId) {
        /*if (lastId == 0) {
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        //session.getTransaction();
        //kleiner Umweg, weil max(eventId) nicht funktionieren will..
        //Event eId = (Event) session.createQuery("select e1 from Event e1, Event e2 where e1.id.instanceId = ? and e1.id.instanceId = e2.id.instanceId and e1.id.eventId > e2.id.eventId").setString(0, instanceId).uniqueResult();
        Integer evId = (Integer) session.createQuery("select max(e1.id.eventId) from Event e1 where e1.id.instanceId = ?").setString(0, instanceId).uniqueResult();
        //session.getTransaction().commit();
        if (evId != null) {
        lastId = evId;
        }
        //lastId = eId.getId().eventId;
        //System.out.println("test");
        }
        
        return new EventId(++lastId, instanceId);*/
        return new EventId(UUID.randomUUID().toString(), instanceId);
    }

    public EventId() {
    }

    public EventId(String eventId, String instanceId) {
        this.eventId = eventId;
        this.instanceId = instanceId;
    }

    public String getEventId() {
        return this.eventId;
    }

    public void setEventId(String eventId) {
        this.eventId = eventId;
    }

    public String getInstanceId() {
        return this.instanceId;
    }

    public void setInstanceId(String instanceId) {
        this.instanceId = instanceId;
    }

    @Override
    public boolean equals(Object other) {
        if ((this == other)) {
            return true;
        }
        if ((other == null)) {
            return false;
        }
        if (!(other instanceof EventId)) {
            return false;
        }
        EventId castOther = (EventId) other;

        return (this.getEventId() == castOther.getEventId())
                && ((this.getInstanceId() == null ? castOther.getInstanceId() == null : this.getInstanceId().equals(castOther.getInstanceId())) || (this.getInstanceId() != null
                && castOther.getInstanceId() != null && this.getInstanceId().equals(castOther.getInstanceId())));
    }

    @Override
    public int hashCode() {
        int result = 17;

        result = 37 * result
                + (getEventId() == null ? 0 : this.getEventId().hashCode());
        result = 37
                * result
                + (getInstanceId() == null ? 0 : this.getInstanceId().hashCode());
        return result;
    }
}
